#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import json
import sys
import agent
import random
import string
import os.path


if os.path.isfile('config.json'):
    # Read current configuration from config file
    with open('config.json', 'r') as cf:
        config = json.loads(cf.read())

    # Cleanup password hash to avoid changes from the UI
    config['api_password'] = ''
    network = agent.read_envfile('network.env')
    config['vpn_port'] = network['OVPN_UDP_PORT']
else:
    # Prepare random values for first-configuration
    # Pick a newtork inside 172.16.0.0/12 (range 172.16.0.0-172.31.255.255)
    foctet=random.randrange(16,31)
    soctet=random.randrange(1,254)

    config = {'host': '', 'lets_encrypt': False, 'ovpn_network': f'172.{foctet}.{soctet}.0', 'ovpn_netmask': '255.255.255.0', 'ovpn_cn': 'nethsec', 'api_user': 'admin', 'api_password': '', 'loki_retention': 180, 'prometheus_retention': 15, 'vpn_port': ''}

    characters = list(string.ascii_letters + string.digits + "!@#%^+_")
    random.shuffle(characters)
    password = []
    for i in range(10):
        password.append(random.choice(characters))
    random.shuffle(password)
    config["api_password"] = ''.join(password)
    config['vpn_port'] = os.environ['TCP_PORTS_RANGE'].split('-')[0]

json.dump(config, fp=sys.stdout)
